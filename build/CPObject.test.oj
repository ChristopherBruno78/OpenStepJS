{"LOG":[],"sourceFile":"CPObject.test.j","objectFile":"../build/CPObject.test.oj","code":"// @import <Foundation/Foundation.j>\n\n// @implementation MyObject : CPObject\nvar $the_class = objj_allocateClassPair(CPObject, \"MyObject\");\nobjj_registerClassPair($the_class);\n\n// Instance methods\nclass_addMethods($the_class,\n[\n    // - (void)helloWorld\n    new objj_method(sel_getUid(\"helloWorld\"),\n    function $MyObject__helloWorld(self, _cmd)\n    {\n        console.log(\"Hello, World\");\n    },\n    // argument types\n    [\"void\"])\n]);\n// @end: @implementation MyObject : CPObject\n\nvar obj = /* [MyObject new] */ MyObject.isa.objj_msgSend0(MyObject, \"new\");\n\nconsole.log(/* [obj respondsToSelector:@selector(helloWorld)] */ (obj == null ? null : obj.isa.objj_msgSend1(obj, \"respondsToSelector:\", sel_getUid(\"helloWorld\"))));\n/* [obj performSelector:@selector(helloWorld)] */ (obj == null ? null : obj.isa.objj_msgSend1(obj, \"performSelector:\", sel_getUid(\"helloWorld\")));\n","superclassRefs":[{"superclass":"CPObject","class":"MyObject"}],"classDefs":["MyObject"],"dependencies":["<Foundation/Foundation.j>"]}